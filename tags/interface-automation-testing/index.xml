<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Interface Automation Testing on QA Discovery</title><link>https://naodeng.tech/tags/interface-automation-testing/</link><description>Recent content in Interface Automation Testing on QA Discovery</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>naodeng.tech</copyright><lastBuildDate>Sat, 04 Nov 2023 10:21:19 +0800</lastBuildDate><atom:link href="https://naodeng.tech/tags/interface-automation-testing/index.xml" rel="self" type="application/rss+xml"/><item><title>REST Assured Tutorial: Advanced Usage - Integration CI CD and Integration Allure Report</title><link>https://naodeng.tech/post-en/rest-assured-tutorial-advance-usage-integration-ci-cd-and-allure-report-en/</link><pubDate>Sat, 04 Nov 2023 10:21:19 +0800</pubDate><guid>https://naodeng.tech/post-en/rest-assured-tutorial-advance-usage-integration-ci-cd-and-allure-report-en/</guid><description>CI/CD integration integration github action The Gradle version integration github action The Maven version integration github action Integrating allure test reports allure Introduction Integration steps The Maven version integration of allure The Gradle version of allure integration Reference CI/CD integration integration github action Use github action as an example, and other CI tools similarly
The Gradle version integration github action See the demo at https://github.com/Automation-Test-Starter/RestAssured-gradle-demo
Create the .github/workflows directory: In your GitHub repository, create a directory called .</description></item><item><title>REST Assured Tutorial: Advanced Usage - Validating Responses and Logging, Filters, File Uploads</title><link>https://naodeng.tech/post-en/rest-assured-tutorial-advance-usage-verifying-response-and-logging-en/</link><pubDate>Fri, 03 Nov 2023 09:25:19 +0800</pubDate><guid>https://naodeng.tech/post-en/rest-assured-tutorial-advance-usage-verifying-response-and-logging-en/</guid><description>Advanced Usage Verifying Response Data response body assertion json assertion XML assertion Cookie assertion Status Code Assertion Header Assertion Content-Type Assertion Full body/content matching Assertion Measuring Response Time File Upload Logging Global logging configuration Steps to add global logging configuration Global Logging Code Example Viewing Global Log Output Localized logging configuration Steps to add Localized logging configuration Viewing Localized Log Output LogConfig Configuration Description Request Logging Response Logging Log if validation fails Header Blacklist Configuration Filters Ordered Filters Response Builder Advanced Usage Verifying Response Data You can verify Response status code, Response status line, Response cookies, Response headers, Response content type and Response body.</description></item><item><title>REST Assured Tutorial: Building a REST Assured Interface Automation Test Program from 0 to 1</title><link>https://naodeng.tech/post-en/rest-assured-tutorial-building-your-own-project-from-0-to-1-en/</link><pubDate>Thu, 02 Nov 2023 10:03:38 +0800</pubDate><guid>https://naodeng.tech/post-en/rest-assured-tutorial-building-your-own-project-from-0-to-1-en/</guid><description>Building a REST Assured API test project from 0 to 1 Gradle version Initialize an empty Gradle project Configuration build.gradle testng.xml configuration gradle build project and initialize initialization project directory Introduction of demo test API Get API Post API Writing Test cases Debugging test cases Viewing Test Reports Command Line Report testng html Report Maven version Initialize an empty Maven project Configuration pom.xml Configuration testng.xml initialization maven project directory The api used by Demo Writing Test cases Debugging test cases Viewing Test Reports terminal report testng html report More info Building a REST Assured API test project from 0 to 1 REST Assured supports both Gradle and Maven build tools, you can choose one of them according to your preference.</description></item><item><title>REST Assured Tutorial: Getting Started and Setting Up Your Environment</title><link>https://naodeng.tech/post-en/rest-assured-tutorial-and-environment-preparation-en/</link><pubDate>Wed, 01 Nov 2023 16:24:49 +0800</pubDate><guid>https://naodeng.tech/post-en/rest-assured-tutorial-and-environment-preparation-en/</guid><description>Introduction of RestAssured REST Assured is a Java testing framework for testing RESTful APIs that enables developers/testers to easily write and execute API tests. It is designed to make API testing simple and intuitive, while providing rich functionality and flexibility. The following are some of the key features and uses of REST Assured:
Initiating HTTP requests: REST Assured allows you to easily build and initiate HTTP GET, POST, PUT, DELETE and other types of requests.</description></item></channel></rss>