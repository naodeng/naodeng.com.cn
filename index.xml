<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>QA Discovery</title><link>https://naodeng.tech/</link><description>Recent content on QA Discovery</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>naodeng.tech</copyright><lastBuildDate>Thu, 02 Nov 2023 10:03:38 +0800</lastBuildDate><atom:link href="https://naodeng.tech/index.xml" rel="self" type="application/rss+xml"/><item><title>REST Assured Tutorial: Building a REST Assured Interface Automation Test Program from 0 to 1</title><link>https://naodeng.tech/post-en/rest-assured-tutorial-building-your-own-project-from-0-to-1-en/</link><pubDate>Thu, 02 Nov 2023 10:03:38 +0800</pubDate><guid>https://naodeng.tech/post-en/rest-assured-tutorial-building-your-own-project-from-0-to-1-en/</guid><description>Building a REST Assured API test project from 0 to 1 Gradle version Initialize an empty Gradle project Configuration build.gradle testng.xml configuration gradle build project and initialize initialization project directory Introduction of demo test API Get API Post API Writing Test cases Debugging test cases Viewing Test Reports Command Line Report testng html Report Maven version Initialize an empty Maven project Configuration pom.xml Configuration testng.xml initialization maven project directory The api used by Demo Writing Test cases Debugging test cases Viewing Test Reports terminal report testng html report More info Building a REST Assured API test project from 0 to 1 REST Assured supports both Gradle and Maven build tools, you can choose one of them according to your preference.</description></item><item><title>REST Assured 教程：从 0 到 1 搭建 REST Assured 接口自动化测试项目</title><link>https://naodeng.tech/post/rest-assured-tutorial-building-your-own-project-from-0-to-1/</link><pubDate>Thu, 02 Nov 2023 10:03:38 +0800</pubDate><guid>https://naodeng.tech/post/rest-assured-tutorial-building-your-own-project-from-0-to-1/</guid><description>从 0 到 1 搭建 REST Assured 接口测试项目 Gradle 版本 创建一个空的 Gradle 工程 配置项目 build.gradle testng.xml 配置 gradle build 项目并初始化 初始化目录 demo 测试接口 Get 接口 Post 接口 编写脚本 调试脚本 查看测试</description></item><item><title>REST Assured Tutorial: Getting Started and Setting Up Your Environment</title><link>https://naodeng.tech/post-en/rest-assured-tutorial-and-environment-preparation-en/</link><pubDate>Wed, 01 Nov 2023 16:24:49 +0800</pubDate><guid>https://naodeng.tech/post-en/rest-assured-tutorial-and-environment-preparation-en/</guid><description>Introduction of RestAssured REST Assured is a Java testing framework for testing RESTful APIs that enables developers/testers to easily write and execute API tests. It is designed to make API testing simple and intuitive, while providing rich functionality and flexibility. The following are some of the key features and uses of REST Assured:
Initiating HTTP requests: REST Assured allows you to easily build and initiate HTTP GET, POST, PUT, DELETE and other types of requests.</description></item><item><title>REST Assured 教程：入门介绍和环境搭建准备</title><link>https://naodeng.tech/post/rest-assured-tutorial-and-environment-preparation/</link><pubDate>Wed, 01 Nov 2023 16:24:49 +0800</pubDate><guid>https://naodeng.tech/post/rest-assured-tutorial-and-environment-preparation/</guid><description>RestAssured 介绍 REST Assured 是一种用于测试 RESTful API 的 Java 测试框架，它使开发人员/测试人员能够轻松地编写和执行 API 测试。它的设计旨在使 API 测试变得简单和直观，同时提供了丰</description></item><item><title>Gatling tutorial and advanced usage: CI/CD Integration</title><link>https://naodeng.tech/post-en/gatling-tool-tutorial-ci-cd-integration-en/</link><pubDate>Mon, 30 Oct 2023 10:36:24 +0800</pubDate><guid>https://naodeng.tech/post-en/gatling-tool-tutorial-ci-cd-integration-en/</guid><description>CI/CD Integration Accessing github action Take github action as an example, and other CI tools as well.
Gradle + Scala version See the demo at https://github.com/Automation-Test-Starter/gatling-gradle-scala-demo.
Create the .github/workflows directory: In your GitHub repository, create a directory called .github/workflows. This will be where the GitHub Actions workflow files will be stored.
Create the workflow file: Create a YAML-formatted workflow file, such as gatling.yml, in the .github/workflows directory.
Edit the gatling.yml file: Copy the following into the file.</description></item><item><title>gatling 性能测试工具进阶用法：CI/CD 集成</title><link>https://naodeng.tech/post/gatling-tool-intro-ci-cd-integration/</link><pubDate>Mon, 30 Oct 2023 10:36:24 +0800</pubDate><guid>https://naodeng.tech/post/gatling-tool-intro-ci-cd-integration/</guid><description>持续集成 接入 github action 以 github action 为例，其他 CI 工具类似 Gradle + Scala 版本 可参考 demo：https://github.com/Automation-Test-S</description></item><item><title>Gatling tutorial and advanced usage: Test report analysis and Performance Scenario Setting</title><link>https://naodeng.tech/post-en/gatling-tool-tutorial-advanced-usage-en/</link><pubDate>Thu, 26 Oct 2023 18:07:44 +0800</pubDate><guid>https://naodeng.tech/post-en/gatling-tool-tutorial-advanced-usage-en/</guid><description>Test report analysis Overview Overall view Open the detailed html report after the performance test execution is finished; Your report can be analyzed by metrics, active users and requests/responses over time, as well as distributions
The name of Simulation is displayed in the center of the page in the header The list on the left side shows a menu of different types of reports, which can be switched by clicking on them.</description></item><item><title>gatling 性能测试工具进阶用法：报告解析和场景设置</title><link>https://naodeng.tech/post/gatling-tool-intro-advanced-usage/</link><pubDate>Thu, 26 Oct 2023 18:07:44 +0800</pubDate><guid>https://naodeng.tech/post/gatling-tool-intro-advanced-usage/</guid><description>测试报告解析 总览 总览图 性能测试执行结束后打开详细的 html 报告，可以看到详细的性能测试报告； 可通过指标、活跃用户和随时间变化的请求/响应以及分布来</description></item><item><title>gatling tutorial: building your own gatling project from 0 to 1</title><link>https://naodeng.tech/post-en/gatling-tool-tutorial2-en/</link><pubDate>Wed, 25 Oct 2023 11:05:45 +0800</pubDate><guid>https://naodeng.tech/post-en/gatling-tool-tutorial2-en/</guid><description>Build your own Gatling project from 0 to 1 Gradle + Scala versions Create an empty Gradle project 1 2 3 mkdir gatling-gradle-demo cd gatling-gradle-demo gradle init Configure the project build.gradle Add the following to the build.gradle file in the project
You can copy the content of the build.gradle file in this project, for more configurations, please refer to the official documentation.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 // Plugin Configuration plugins { id &amp;#39;scala&amp;#39; // scala plugin declaration (based on the development tools plugin) id &amp;#39;io.</description></item><item><title>gatling 性能测试工具：从 0 到 1 搭建自己的 Gatling 工程</title><link>https://naodeng.tech/post/gatling-tool-intro2/</link><pubDate>Wed, 25 Oct 2023 11:05:45 +0800</pubDate><guid>https://naodeng.tech/post/gatling-tool-intro2/</guid><description>从 0 到 1 搭建自己的 Gatling 工程 Gradle + Scala 版本 创建一个空的 Gradle 工程 1 2 3 mkdir gatling-gradle-demo cd gatling-gradle-demo gradle init 配置项目 build.gradle 在 项目中 build.gradle 文件中添加以下内容 可 copy 本项目中的 build.gradle 文件内容，更多配</description></item><item><title>Gatling tutorial: Getting Started</title><link>https://naodeng.tech/post-en/gatling-tool-tutorial1-en/</link><pubDate>Tue, 24 Oct 2023 17:44:53 +0800</pubDate><guid>https://naodeng.tech/post-en/gatling-tool-tutorial1-en/</guid><description>Gatling Introduction Gatling is an open source tool for performance and load testing, especially for testing web applications. It is a high-performance tool based on the Scala programming language for simulating and measuring the performance of applications under different loads.
Here are some of the key features and benefits of Gatling:
Based on Scala programming language: Gatling&amp;rsquo;s test scripts are written in Scala, which makes it a powerful programming tool that allows users to write complex test scenarios and logic.</description></item><item><title>gatling 性能测试工具入门介绍</title><link>https://naodeng.tech/post/gatling-tool-intro1/</link><pubDate>Tue, 24 Oct 2023 17:44:53 +0800</pubDate><guid>https://naodeng.tech/post/gatling-tool-intro1/</guid><description>Gatling 介绍 Gatling 是一个用于性能测试和负载测试的开源工具，特别适用于测试 Web 应用程序。它是一个基于 Scala 编程语言的高性能工具，用于模拟并测量应用程序在不同负</description></item><item><title>Introducing Bruno for Replacement Postman</title><link>https://naodeng.tech/post-en/introduction_of_bruno-en/</link><pubDate>Tue, 17 Oct 2023 11:31:43 +0800</pubDate><guid>https://naodeng.tech/post-en/introduction_of_bruno-en/</guid><description>Since Postman announced in May 2023 that it will phase out the Scratch Pad model with offline capabilities, teams that need to isolate API workspace data from third-party servers have been looking for alternatives. Teams that need to isolate API workspace data from third-party servers have had to look for alternatives. bruno is one of those alternatives: an open source desktop application designed for API testing, development, and debugging. Bruno</description></item><item><title>postman 替换工具 bruno 使用介绍</title><link>https://naodeng.tech/post/introduction_of_bruno/</link><pubDate>Tue, 17 Oct 2023 11:31:43 +0800</pubDate><guid>https://naodeng.tech/post/introduction_of_bruno/</guid><description>自从 Postman 在 2023 年 5 月宣布将逐渐淘汰具有离线功能的 Scratch Pad 模式以后，需要将 API 工作区数据 从第三方服务器上隔离的团队不得不寻找替代方案。bruno 就是可选</description></item><item><title>软件研发质量中的二八法则</title><link>https://naodeng.tech/post/80-20-rule/</link><pubDate>Mon, 22 May 2023 00:00:00 +0000</pubDate><guid>https://naodeng.tech/post/80-20-rule/</guid><description>什么是二八法则 二八法则，也被称为帕累托法则（Pareto principle），是一种经济学原理和管理学理论，描述了一种观察结果：80%的结果</description></item><item><title>接口测试简介</title><link>https://naodeng.tech/post/introduction_of_api_test/</link><pubDate>Thu, 20 Apr 2023 00:00:00 +0000</pubDate><guid>https://naodeng.tech/post/introduction_of_api_test/</guid><description>什么是 API? API:应用程序接口（全称：application programming interface），缩写为 API，是一种计算接口，它定义多个软件中介之间的交互</description></item><item><title>不同类型 AI 申请加入等待列表入口</title><link>https://naodeng.tech/post/different-types-of-ai-join-waiting-list/</link><pubDate>Wed, 22 Mar 2023 00:00:00 +0000</pubDate><guid>https://naodeng.tech/post/different-types-of-ai-join-waiting-list/</guid><description>Google Bard Google Bard 进入公开测试版。测试申请中~~~ 申请链接：https://bard.google.com/ 谷歌发布 Bard，这是其在创建人工智能竞赛</description></item><item><title>新技术分享：Mac OS 下 edge 浏览器开启新 UI</title><link>https://naodeng.tech/post/edge-enablenew-ui/</link><pubDate>Wed, 15 Feb 2023 00:00:00 +0000</pubDate><guid>https://naodeng.tech/post/edge-enablenew-ui/</guid><description>打开 edge 浏览器 在地址栏输入命令 edge://flags/ 在 flags 的页面输入 11 进行搜索 在搜索结果下选择“Show Windows 11 visual effects in title bar and toolbar”将状态变更为启用 重启浏览器，</description></item><item><title>敏捷测试的 30 天挑战</title><link>https://naodeng.tech/post/30-days-of-agile-testing/</link><pubDate>Mon, 30 Jan 2023 00:00:00 +0000</pubDate><guid>https://naodeng.tech/post/30-days-of-agile-testing/</guid><description>如果你的项目是采用敏捷测试，那么欢迎加入很棒的 30 天敏捷测试挑战。 以下是 30 个挑战的列表，每月每天一个，打印下面的列表，把它保存在某个地方。打印</description></item><item><title>Playwright 自动化框架入门</title><link>https://naodeng.tech/post/playwright-get-started/</link><pubDate>Wed, 18 Jan 2023 00:00:00 +0000</pubDate><guid>https://naodeng.tech/post/playwright-get-started/</guid><description>下面的信息是对 playwright 自动化测试框架的新手入门介绍。如果你想要学习更多关于 playwright 自动化测试框架的信息，请参阅它的文档。运行测试：打开测试界面，选择&amp;q</description></item><item><title>Cypress UI 自动化测试框架学习（6）- 用例编辑和脚本录制工具 Cypress Studio 介绍</title><link>https://naodeng.tech/post/cypress-demo6/</link><pubDate>Fri, 13 May 2022 00:00:00 +0000</pubDate><guid>https://naodeng.tech/post/cypress-demo6/</guid><description>Cypress Studio 提供了一种在测试运行程序中生成测试的可视化方法，通过记录与被测应用程序的交互。支持.click（）、.type（）、.check（）、.</description></item><item><title>Cypress UI 自动化测试框架学习（5）- 命令大全</title><link>https://naodeng.tech/post/cypress-demo5/</link><pubDate>Thu, 12 May 2022 00:00:00 +0000</pubDate><guid>https://naodeng.tech/post/cypress-demo5/</guid><description>Cypress UI 自动化测试框架学习（5）- 命令大全 命令大全 and：创建断言 as：创建别名 blur：失去焦点 check：选中 check 或者 radio children：获取</description></item><item><title>Cypress UI 自动化测试框架学习（4）- 数据驱动，方法封装参数化和测试框架</title><link>https://naodeng.tech/post/cypress-demo4/</link><pubDate>Wed, 11 May 2022 00:00:00 +0000</pubDate><guid>https://naodeng.tech/post/cypress-demo4/</guid><description>下面的信息是自动化测试框架学习第四篇数据驱动方法封装参数化和测试框架的介绍。 在自动化测试框架学习中，有很多方法可以用来驱动测试框架。例如，数</description></item><item><title>Cypress UI 自动化测试框架学习（3）- 元素定位，操作和断言</title><link>https://naodeng.tech/post/cypress-demo3/</link><pubDate>Tue, 10 May 2022 00:00:00 +0000</pubDate><guid>https://naodeng.tech/post/cypress-demo3/</guid><description>下面的信息是对于框架学习第 3 篇的介绍。在该篇文章中，我们学习了如何使用元素定位、操作和断言。该框架可以帮助用户定位相关的元素，并且可以帮助用</description></item><item><title>Cypress UI 自动化测试框架学习（2）- 测试报告</title><link>https://naodeng.tech/post/cypress-demo2/</link><pubDate>Mon, 09 May 2022 00:00:00 +0000</pubDate><guid>https://naodeng.tech/post/cypress-demo2/</guid><description>下面的信息是介绍 cypress 自动化测试框架学习第 3 篇的测试报告的内容 主要介绍一下如何去使用不同格式的 cypress 自动化测试报告模版 写在前面 由于 Cypress 测试报告是建立在</description></item><item><title>Cypress UI 自动化测试框架学习（1）- 上手</title><link>https://naodeng.tech/post/cypress-demo1/</link><pubDate>Thu, 05 May 2022 00:00:00 +0000</pubDate><guid>https://naodeng.tech/post/cypress-demo1/</guid><description>下面的信息是对 Cypress 自动化测试框架的新手入门介绍。如果你想要学习更多关于 playwright 自动化测试框架的信息，请参阅它的文档。运行测试：打开测试界面，选择&amp;q</description></item></channel></rss>