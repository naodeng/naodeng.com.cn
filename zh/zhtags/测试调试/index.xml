<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>测试调试 on 软件测试同学</title><link>https://naodeng.com.cn/zh/zhtags/%E6%B5%8B%E8%AF%95%E8%B0%83%E8%AF%95/</link><description>Recent content in 测试调试 on 软件测试同学</description><image><title>软件测试同学</title><url>https://naodeng.com.cn/papermod-cover.png</url><link>https://naodeng.com.cn/papermod-cover.png</link></image><generator>Hugo -- 0.136.5</generator><language>zh</language><lastBuildDate>Fri, 19 Jan 2024 13:05:44 +0800</lastBuildDate><atom:link href="https://naodeng.com.cn/zh/zhtags/%E6%B5%8B%E8%AF%95%E8%B0%83%E8%AF%95/index.xml" rel="self" type="application/rss+xml"/><item><title>UI 测试最佳实践的通用最佳实践（二）：UI 测试调试最佳实践和在测试中达到 UI 状态而无需使用 UI</title><link>https://naodeng.com.cn/zh/posts/ui-automation-testing/ui-testing-best-practice-generic-best-practices-2-ui-tests-debugging-best-practices-and-reaching-ui-state/</link><pubDate>Fri, 19 Jan 2024 13:05:44 +0800</pubDate><guid>https://naodeng.com.cn/zh/posts/ui-automation-testing/ui-testing-best-practice-generic-best-practices-2-ui-tests-debugging-best-practices-and-reaching-ui-state/</guid><description>这篇博文探讨了 UI 测试的通用最佳实践之二：UI 测试调试和无需使用 UI 达到 UI 状态。博文详细介绍了在 UI 测试中的调试技巧，包括使用断点、日志和交互式调试工具等方法，提高测试脚本的调试效率。此外，文章强调了通过直接设置应用程序状态而无需依赖 UI 元素来达到 UI 状态的方法，以提高测试速度和稳定性。通过这些实践，读者能够更好地应对 UI 测试中的调试挑战，同时优化测试脚本的执行效率。</description></item></channel></rss>